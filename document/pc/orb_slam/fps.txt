
1. ELP1080p.yaml 
 Camera.fps: 30.0 
 	↓
 Camera.fps: 60.0
 
2. camera.launch
 <param name="framerate" value="30" />
 	       　↓
 <param name="framerate" value="60" />
 
3. twist_compare.cpp
 ros::Rate rate(30.0);
 	↓
 ros::Rate rate(60.0);
 
 ros::Duration(0.01).sleep();
 	↓
 ros::Duration(1).sleep();
 
4. 問題点
　60fps出ていない
 yuyvだから
 mjpegにするとエラーが出る
 v4l2-ctl -d /dev/video0 --all
 v4l2-ctl -d /dev/video0 --list-formats-ext
 
 
 
5. camera.launch
 
 <launch>
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="framerate" value="60" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
    <param name="camera_info_url" value="file:///home/takashi/.ros/camera_info/head_camera.yaml" />
     <remap from="/usb_cam/image_raw" to="/camera/image_raw" />
  </node>   
</launch>
 
		↓
 
<launch4t131
name="usb_cam" pkg="uvc_camera" type="uvc_camera_node" output="screen" >
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="framerate" value="60" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
    <param name="camera_info_url" value="file:///home/takashi/.ros/camera_info/head_camera.yaml" />
     <remap from="/image_raw" to="/camera/image_raw" />
  </node>   
</launch>



cd ~/ffmpeg_sources && \
wget -O ffmpeg-snapshot.tar.bz2 http://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 && \
tar xjvf ffmpeg-snapshot.tar.bz2 && \
cd ffmpeg && \
PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \
  --prefix="$HOME/ffmpeg_build" \
  --pkg-config-flags="--static" \
  --extra-cflags="-fPIC" \
  --extra-ldflags="-L$HOME/ffmpeg_build/lib" \
  --extra-libs="-lpthread -lm" \
  --bindir="$HOME/bin" \
  --enable-shared \
  --enable-pic \
  --enable-gpl \
  --enable-libass \
  --enable-libfdk-aac \
  --enable-libfreetype \
  --enable-libmp3lame \
  --enable-libopus \
  --enable-libtheora \
  --enable-libvorbis \
  --enable-libvpx \
  --enable-libx264 \
  --enable-libx265 \
  --enable-nonfree && \
PATH="$HOME/bin:$PATH" make -j8 && \
make install
hash -r

set(avcodec_LIBRARIES /usr/lib/x86_64-linux-gnu/libavcodec.so.54)
set(swscale_LIBRARIES /usr/lib/x86_64-linux-gnu/libswscale.so.2)
set(avcodec_INCLUDE_DIRS /usr/local/include/libavcodec)
set(swscale_INCLUDE_DIRS /usr/local/include/libswscale)



sudo apt-get remove ffmpeg x264 libx264-dev


sudo apt-get update 
sudo apt-get install build-essential git-core checkinstall yasm texi2html libfaac-dev \
    libopencore-amrnb-dev libopencore-amrwb-dev libsdl1.2-dev libtheora-dev \
    libvorbis-dev libx11-dev libxfixes-dev libxvidcore-dev zlib1g-dev  
    
    
cd
git clone git://git.videolan.org/x264
cd x264
make clean; make distclean
./configure --enable-static --enable-pic
make
sudo checkinstall --pkgname=x264 --default --pkgversion="3:$(./version.sh | \
    awk -F'[" ]' '/POINT/{print $4"+git"$5}')" --backup=no --deldoc=yes
    
    
sudo apt-get remove libmp3lame-dev
sudo apt-get install nasm
cd
wget http://downloads.sourceforge.net/project/lame/lame/3.98.4/lame-3.98.4.tar.gz
tar xzvf lame-3.98.4.tar.gz
cd lame-3.98.4
./configure --enable-nasm --enable-pic
make
sudo checkinstall --pkgname=lame-ffmpeg --pkgversion="3.98.4" --backup=no --default \
    --deldoc=yes


cd
git clone http://git.chromium.org/webm/libvpx.git
cd libvpx
make clean; make distclean
./configure --enable-pic
make
sudo checkinstall --pkgname=libvpx --pkgversion="$(date +%Y%m%d%H%M)-git" --backup=no \
    --default --deldoc=yes
    

cd
git clone git://git.videolan.org/ffmpeg
cd ffmpeg
make clean; make distclean
./configure --enable-gpl --enable-version3 --enable-nonfree --enable-postproc \
    --enable-libfaac --enable-libopencore-amrnb --enable-libopencore-amrwb \
    --enable-libtheora --enable-libvorbis --enable-libx264 --enable-libxvid \
    --enable-x11grab --enable-libmp3lame --enable-libvpx --enable-pic --enable-avresample
make
sudo checkinstall --pkgname=ffmpeg --pkgversion="5:$(./version.sh)" --backup=no \
    --deldoc=yes --default
hash x264 ffmpeg ffplay ffprobe

cd ffmpeg
make clean; make distclean
./configure --enable-gpl --enable-version3 --enable-nonfree --enable-postproc \
    --enable-libfaac --enable-libopencore-amrnb --enable-libopencore-amrwb \
    --enable-libtheora --enable-libvorbis --enable-libx264 --enable-libxvid \
    --enable-x11grab --enable-pic
make
sudo checkinstall --pkgname=ffmpeg --pkgversion="5:$(./version.sh)" --backup=no \
    --deldoc=yes --default
hash x264 ffmpeg ffplay ffprobe

./configure --enable-pic
sudo ln -s /usr/local/bin/ffmpeg /usr/bin/ffmpeg
