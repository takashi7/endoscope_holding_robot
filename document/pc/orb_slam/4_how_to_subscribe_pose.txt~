2017/10/26

0. 注意
　1. ほとんど '3_how_to_subscribe_rpy.txt'　と同じ
 2. カメラの姿勢の表現にQuaterninonを使う
 
4. sub_pose.cpp の編集
 4-1.  
　　$ roscd orbslam_tf
　　$ mkdir src
　　$ cd src
　　$ gedit sub_pose.cpp
　
　4-2. sub_pose.cpp　の編集
  以下をコピペ　
  適宜修正する 
	#include <ros/ros.h>
	#include "geometry_msgs/TransformStamped.h"
	#include "tf/transform_datatypes.h"
	#include "geometry_msgs/Twist.h"
	#include "geometry_msgs/Quaternion.h"
	#include <tf/transform_listener.h>


	int main(int argc, char** argv){
	  ros::init(argc, argv, "Mono_pose");
	  ros::NodeHandle node;
	  tf::TransformListener listener;  
	  ros::Publisher caemera_pose = node.advertise<geometry_msgs::Pose>("camera/pose", 10);    
	  
	  ros::Rate rate(10.0);
	  while (node.ok()){
	    tf::StampedTransform transform;
	    try{
	      listener.lookupTransform("world", "camera_pose", ros::Time(0), transform);
	    }
	    catch (tf::TransformException &ex) {
	      ROS_ERROR("%s",ex.what());
	      ros::Duration(1.0).sleep();
	      continue;
	    }
	    
	    geometry_msgs::Pose cam_msg;
	    cam_msg.position.x = transform.getOrigin().x();
	    cam_msg.position.y = transform.getOrigin().y();
	    cam_msg.position.z = transform.getOrigin().z();

	    cam_msg.orientation.x = transform.getRotation().x();
	    cam_msg.orientation.y = transform.getRotation().y();
	    cam_msg.orientation.z = transform.getRotation().z();    
	    cam_msg.orientation.w = transform.getRotation().w(); 
	    
	    caemera_pose.publish(cam_msg);

	    rate.sleep();
	  }
	  return 0;
	};
　	
5. CMakeLists.txtの編集
　5-1. 
　 $ roscd orbslam_tf
　 $ gedit CMakeLists.txt
　
　5-2. include_directories()の下に以下を挿入
　 　実行名は適宜変えてよい
	add_executable(sub_pose src/sub_pose.cpp)
	target_link_libraries(sub_pose ${catkin_LIBRARIES})

6. パッケージのビルド
 6-1. 
　 $ cd ~/catkin_ws
　 $ catkin_make
 
 6-2. 
  成功すると '~/catkin_ws/devel/lib/orbslam_tf' に 'sub_pose' という実行ファイルができる 

7. '/camera/pose'　の確認 
　　Terminal1
　　 $ roscore
　 
　　Terminal2
　　 $ cd ~/SLAM/ORB_SLAM2
　　 $ rosrun ORB_SLAM2 Mono Vocabulary/ORBvoc.txt Examples/Monocular/ELP1080p.yaml 
　
　　Terminal3
　　 $ roslaunch ~/SLAM/ORB_SLAM2/launch/camera.launch

　7-1. echoで確認
　　Terminal4
　　 $ rostopic list
　　 $ rostopic echo /camera/pose　


参考
 内容
　　1. geometry_msgs/Pose Message
　
　URL
　 1. http://docs.ros.org/api/geometry_msgs/html/msg/Pose.html

　
